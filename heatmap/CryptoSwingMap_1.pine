//@version=5
indicator('(Crypto) SwingMap_1', overlay=true)

/////////////
// SYMBOLS // 

u01 = input.bool(true,  title = "", group = 'Symbols', inline = 's01')
u02 = input.bool(true,  title = "", group = 'Symbols', inline = 's02')
u03 = input.bool(true,  title = "", group = 'Symbols', inline = 's03')
u04 = input.bool(true,  title = "", group = 'Symbols', inline = 's04')
u05 = input.bool(true,  title = "", group = 'Symbols', inline = 's05')
u06 = input.bool(true,  title = "", group = 'Symbols', inline = 's06')
u07 = input.bool(true,  title = "", group = 'Symbols', inline = 's07')
u08 = input.bool(true,  title = "", group = 'Symbols', inline = 's08')
u09 = input.bool(true,  title = "", group = 'Symbols', inline = 's09')
u10 = input.bool(true,  title = "", group = 'Symbols', inline = 's10')
u11 = input.bool(true,  title = "", group = 'Symbols', inline = 's11')
u12 = input.bool(true,  title = "", group = 'Symbols', inline = 's12')
u13 = input.bool(true,  title = "", group = 'Symbols', inline = 's13')
u14 = input.bool(true,  title = "", group = 'Symbols', inline = 's14')
u15 = input.bool(true,  title = "", group = 'Symbols', inline = 's15')
u16 = input.bool(true,  title = "", group = 'Symbols', inline = 's16')
u17 = input.bool(true,  title = "", group = 'Symbols', inline = 's17')
u18 = input.bool(true,  title = "", group = 'Symbols', inline = 's18')
u19 = input.bool(true,  title = "", group = 'Symbols', inline = 's19')
u20 = input.bool(true,  title = "", group = 'Symbols', inline = 's20')
u21 = input.bool(true,  title = "", group = 'Symbols', inline = 's21')
u22 = input.bool(true,  title = "", group = 'Symbols', inline = 's22')
u23 = input.bool(true,  title = "", group = 'Symbols', inline = 's23')
u24 = input.bool(true,  title = "", group = 'Symbols', inline = 's24')
u25 = input.bool(true,  title = "", group = 'Symbols', inline = 's25')
u26 = input.bool(true,  title = "", group = 'Symbols', inline = 's26')
u27 = input.bool(true,  title = "", group = 'Symbols', inline = 's27')
u28 = input.bool(true,  title = "", group = 'Symbols', inline = 's28')
u29 = input.bool(true,  title = "", group = 'Symbols', inline = 's29')
u30 = input.bool(true,  title = "", group = 'Symbols', inline = 's30')
u31 = input.bool(true,  title = "", group = 'Symbols', inline = 's31')
u32 = input.bool(true,  title = "", group = 'Symbols', inline = 's32')
u33 = input.bool(true,  title = "", group = 'Symbols', inline = 's33')
u34 = input.bool(true,  title = "", group = 'Symbols', inline = 's34')
u35 = input.bool(true,  title = "", group = 'Symbols', inline = 's35')
u36 = input.bool(true, title = "", group = 'Symbols', inline = 's36')
u37 = input.bool(true, title = "", group = 'Symbols', inline = 's37')
u38 = input.bool(true, title = "", group = 'Symbols', inline = 's38')
u39 = input.bool(true, title = "", group = 'Symbols', inline = 's39')
u40 = input.bool(true, title = "", group = 'Symbols', inline = 's40')

s01 = input.symbol('BINANCE:1000BTTCUSDTPERP', group = 'Symbols', inline = 's01') //1
s02 = input.symbol('BINANCE:1000SHIBUSDTPERP', group = 'Symbols', inline = 's02') //1
s03 = input.symbol('BINANCE:1000XECUSDTPERP', group = 'Symbols', inline = 's03') //1
s04 = input.symbol('BINANCE:1INCHUSDT', group = 'Symbols', inline = 's04') //1
s05 = input.symbol('BINANCE:AAVEUSDT', group = 'Symbols', inline = 's05') //1
s06 = input.symbol('BINANCE:BNBUSDT', group = 'Symbols', inline = 's06') //1
s07 = input.symbol('BINANCE:ADAUSDT', group = 'Symbols', inline = 's07') //1
s08 = input.symbol('BINANCE:AKROUSDT', group = 'Symbols', inline = 's08') //1
s09 = input.symbol('BINANCE:ALGOUSDT', group = 'Symbols', inline = 's09') //1
s10 = input.symbol('BINANCE:ALICEUSDT', group = 'Symbols', inline = 's10') //1
s11 = input.symbol('BINANCE:ALPHAUSDT', group = 'Symbols', inline = 's11') //1
s12 = input.symbol('BINANCE:ANKRUSDT', group = 'Symbols', inline = 's12') //1
s13 = input.symbol('BINANCE:ANTUSDT', group = 'Symbols', inline = 's13') //1
s14 = input.symbol('BINANCE:ARUSDT', group = 'Symbols', inline = 's14') //1
s15 = input.symbol('BINANCE:ARPAUSDT', group = 'Symbols', inline = 's15') //1
s16 = input.symbol('BINANCE:ATAUSDT', group = 'Symbols', inline = 's16') //1
s17 = input.symbol('BINANCE:ATOMUSDT', group = 'Symbols', inline = 's17') //1
s18 = input.symbol('BINANCE:AUDIOUSDT', group = 'Symbols', inline = 's18') //1
s19 = input.symbol('BINANCE:AVAXUSDT', group = 'Symbols', inline = 's19') //1
s20 = input.symbol('BINANCE:AXSUSDT', group = 'Symbols', inline = 's20') //1
s21 = input.symbol('BINANCE:BAKEUSDT', group = 'Symbols', inline = 's21') //1
s22 = input.symbol('BINANCE:BALUSDT', group = 'Symbols', inline = 's22') //1
s23 = input.symbol('BINANCE:BANDUSDT', group = 'Symbols', inline = 's23') //1
s24 = input.symbol('BINANCE:BATUSDT', group = 'Symbols', inline = 's24') //1
s25 = input.symbol('BINANCE:BCHUSDT', group = 'Symbols', inline = 's25') //1
s26 = input.symbol('BINANCE:BELUSDT', group = 'Symbols', inline = 's26') //1
s27 = input.symbol('BINANCE:BLZUSDT', group = 'Symbols', inline = 's27') //1
s28 = input.symbol('BINANCE:DGBUSDT', group = 'Symbols', inline = 's28') //1
s29 = input.symbol('BINANCE:TRBUSDT', group = 'Symbols', inline = 's29') //1
s30 = input.symbol('BINANCE:BTCUSDT', group = 'Symbols', inline = 's30') //1
s31 = input.symbol('BINANCE:BTCDOMUSDTPERP', group = 'Symbols', inline = 's31') //1
s32 = input.symbol('BINANCE:BTCSTUSDT', group = 'Symbols', inline = 's32') //1
s33 = input.symbol('BINANCE:BTSUSDT', group = 'Symbols', inline = 's33') //1
s34 = input.symbol('BINANCE:C98USDT', group = 'Symbols', inline = 's34') //1
s35 = input.symbol('BINANCE:CELOUSDT', group = 'Symbols', inline = 's35') //1
s36 = input.symbol('BINANCE:CELRUSDT', group = 'Symbols', inline = 's36') //1
s37 = input.symbol('BINANCE:CHRUSDT', group = 'Symbols', inline = 's37') //1
// s01 = input.symbol('BINANCE:CHZUSDT', group = 'Symbols', inline = 's01') //2
// s02 = input.symbol('BINANCE:COMPUSDT', group = 'Symbols', inline = 's02') //2
// s03 = input.symbol('BINANCE:COTIUSDT', group = 'Symbols', inline = 's03') //2
// s04 = input.symbol('BINANCE:CRVUSDT', group = 'Symbols', inline = 's04') //2
// s05 = input.symbol('BINANCE:CTKUSDT', group = 'Symbols', inline = 's05') //2
// s06 = input.symbol('BINANCE:CTSIUSDT', group = 'Symbols', inline = 's06') //2
// s07 = input.symbol('BINANCE:CVCUSDT', group = 'Symbols', inline = 's07') //2
// s08 = input.symbol('BINANCE:DASHUSDT', group = 'Symbols', inline = 's08') //2
// s09 = input.symbol('BINANCE:DEFIUSDTPERP', group = 'Symbols', inline = 's09') //2
// s10 = input.symbol('BINANCE:DENTUSDT', group = 'Symbols', inline = 's10') //2
// s11 = input.symbol('BINANCE:DODOUSDT', group = 'Symbols', inline = 's11') //2
// s12 = input.symbol('BINANCE:DOGEUSDT', group = 'Symbols', inline = 's12') //2
// s13 = input.symbol('BINANCE:DOTUSDT', group = 'Symbols', inline = 's13') //2
// s14 = input.symbol('BINANCE:DUSKUSDT', group = 'Symbols', inline = 's14') //2
// s15 = input.symbol('BINANCE:DYDXUSDT', group = 'Symbols', inline = 's15') //2
// s16 = input.symbol('BINANCE:EGLDUSDT', group = 'Symbols', inline = 's16') //2
// s17 = input.symbol('BINANCE:ENJUSDT', group = 'Symbols', inline = 's17') //2
// s18 = input.symbol('BINANCE:ENSUSDT', group = 'Symbols', inline = 's18') //2
// s19 = input.symbol('BINANCE:EOSUSDT', group = 'Symbols', inline = 's19') //2
// s20 = input.symbol('BINANCE:ETCUSDT', group = 'Symbols', inline = 's20') //2
// s21 = input.symbol('BINANCE:ETHUSDT', group = 'Symbols', inline = 's21') //2
// s22 = input.symbol('BINANCE:FILUSDT', group = 'Symbols', inline = 's22') //2
// s23 = input.symbol('BINANCE:FLMUSDT', group = 'Symbols', inline = 's23') //2
// s24 = input.symbol('BINANCE:FLOWUSDT', group = 'Symbols', inline = 's24') //2
// s25 = input.symbol('BINANCE:FTMUSDT', group = 'Symbols', inline = 's25') //2
// s26 = input.symbol('BINANCE:GALAUSDT', group = 'Symbols', inline = 's26') //2
// s27 = input.symbol('BINANCE:GRTUSDT', group = 'Symbols', inline = 's27') //2
// s28 = input.symbol('BINANCE:GTCUSDT', group = 'Symbols', inline = 's28') //2
// s29 = input.symbol('BINANCE:HBARUSDT', group = 'Symbols', inline = 's29') //2
// s30 = input.symbol('BINANCE:HNTUSDT', group = 'Symbols', inline = 's30') //2
// s31 = input.symbol('BINANCE:HOTUSDT', group = 'Symbols', inline = 's31') //2
// s32 = input.symbol('BINANCE:ICPUSDT', group = 'Symbols', inline = 's32') //2
// s33 = input.symbol('BINANCE:ICXUSDT', group = 'Symbols', inline = 's33') //2
// s34 = input.symbol('BINANCE:IMXUSDT', group = 'Symbols', inline = 's34') //2
// s35 = input.symbol('BINANCE:IOSTUSDT', group = 'Symbols', inline = 's35') //2
// s36 = input.symbol('BINANCE:IOTAUSDT', group = 'Symbols', inline = 's36') //2
// s37 = input.symbol('BINANCE:IOTXUSDT', group = 'Symbols', inline = 's37') //2
// s01 = input.symbol('BINANCE:KAVAUSDT', group = 'Symbols', inline = 's01') //3
// s02 = input.symbol('BINANCE:BTCUSDT', group = 'Symbols', inline = 's02') //3 NG
// s03 = input.symbol('BINANCE:KLAYUSDT', group = 'Symbols', inline = 's03') //3
// s04 = input.symbol('BINANCE:KNCUSDT', group = 'Symbols', inline = 's04') //3
// s05 = input.symbol('BINANCE:KSMUSDT', group = 'Symbols', inline = 's05') //3
// s06 = input.symbol('BINANCE:LINAUSDT', group = 'Symbols', inline = 's06') //3
// s07 = input.symbol('BINANCE:LINKUSDT', group = 'Symbols', inline = 's07') //3
// s08 = input.symbol('BINANCE:LITUSDT', group = 'Symbols', inline = 's08') //3
// s09 = input.symbol('BINANCE:LPTUSDT', group = 'Symbols', inline = 's09') //3
// s10 = input.symbol('BINANCE:LRCUSDT', group = 'Symbols', inline = 's10') //3
// s11 = input.symbol('BINANCE:LTCUSDT', group = 'Symbols', inline = 's11') //3
// s12 = input.symbol('BINANCE:LUNAUSDT', group = 'Symbols', inline = 's12') //3
// s13 = input.symbol('BINANCE:MANAUSDT', group = 'Symbols', inline = 's13') //3
// s14 = input.symbol('BINANCE:MASKUSDT', group = 'Symbols', inline = 's14') //3
// s15 = input.symbol('BINANCE:MATICUSDT', group = 'Symbols', inline = 's15') //3
// s16 = input.symbol('BINANCE:MKRUSDT', group = 'Symbols', inline = 's16') //3
// s17 = input.symbol('BINANCE:MTLUSDT', group = 'Symbols', inline = 's17') //3
// s18 = input.symbol('BINANCE:NEARUSDT', group = 'Symbols', inline = 's18') //3
// s19 = input.symbol('BINANCE:NEOUSDT', group = 'Symbols', inline = 's19') //3
// s20 = input.symbol('BINANCE:NKNUSDT', group = 'Symbols', inline = 's20') //3
// s21 = input.symbol('BINANCE:BTCUSDT', group = 'Symbols', inline = 's21') //3 NG
// s22 = input.symbol('BINANCE:OCEANUSDT', group = 'Symbols', inline = 's22') //3
// s23 = input.symbol('BINANCE:OGNUSDT', group = 'Symbols', inline = 's23') //3
// s24 = input.symbol('BINANCE:OMGUSDT', group = 'Symbols', inline = 's24') //3
// s25 = input.symbol('BINANCE:ONEUSDT', group = 'Symbols', inline = 's25') //3
// s26 = input.symbol('BINANCE:ONTUSDT', group = 'Symbols', inline = 's26') //3
// s27 = input.symbol('BINANCE:PEOPLEUSDT', group = 'Symbols', inline = 's27') //3
// s28 = input.symbol('BINANCE:QTUMUSDT', group = 'Symbols', inline = 's28') //3
// s29 = input.symbol('BINANCE:RAYUSDT', group = 'Symbols', inline = 's29') //3
// s30 = input.symbol('BINANCE:REEFUSDT', group = 'Symbols', inline = 's30') //3
// s31 = input.symbol('BINANCE:RENUSDT', group = 'Symbols', inline = 's31') //3
// s32 = input.symbol('BINANCE:RLCUSDT', group = 'Symbols', inline = 's32') //3
// s33 = input.symbol('BINANCE:ROSEUSDT', group = 'Symbols', inline = 's33') //3
// s34 = input.symbol('BINANCE:RSRUSDT', group = 'Symbols', inline = 's34') //3
// s35 = input.symbol('BINANCE:RUNEUSDT', group = 'Symbols', inline = 's35') //3
// s36 = input.symbol('BINANCE:RVNUSDT', group = 'Symbols', inline = 's36') //3
// s37 = input.symbol('BINANCE:SANDUSDT', group = 'Symbols', inline = 's37') //3
// s01 = input.symbol('BINANCE:SCUSDT', group = 'Symbols', inline = 's01') //4
// s02 = input.symbol('BINANCE:SFPUSDT', group = 'Symbols', inline = 's02') //4
// s03 = input.symbol('BINANCE:SKLUSDT', group = 'Symbols', inline = 's03') //4
// s04 = input.symbol('BINANCE:SNXUSDT', group = 'Symbols', inline = 's04') //4
// s05 = input.symbol('BINANCE:SOLUSDT', group = 'Symbols', inline = 's05') //4
// s06 = input.symbol('BINANCE:SRMUSDT', group = 'Symbols', inline = 's06') //4
// s07 = input.symbol('BINANCE:STMXUSDT', group = 'Symbols', inline = 's07') //4
// s08 = input.symbol('BINANCE:STORJUSDT', group = 'Symbols', inline = 's08') //4
// s09 = input.symbol('BINANCE:SUSHIUSDT', group = 'Symbols', inline = 's09') //4
// s10 = input.symbol('BINANCE:SXPUSDT', group = 'Symbols', inline = 's10') //4
// s11 = input.symbol('BINANCE:THETAUSDT', group = 'Symbols', inline = 's11') //4
// s12 = input.symbol('BINANCE:TLMUSDT', group = 'Symbols', inline = 's12') //4
// s13 = input.symbol('BINANCE:TOMOUSDT', group = 'Symbols', inline = 's13') //4
// s14 = input.symbol('BINANCE:TRXUSDT', group = 'Symbols', inline = 's14') //4
// s15 = input.symbol('BINANCE:UNFIUSDT', group = 'Symbols', inline = 's15') //4
// s16 = input.symbol('BINANCE:UNIUSDT', group = 'Symbols', inline = 's16') //4
// s17 = input.symbol('BINANCE:VETUSDT', group = 'Symbols', inline = 's17') //4
// s18 = input.symbol('BINANCE:WAVESUSDT', group = 'Symbols', inline = 's18') //4
// s19 = input.symbol('BINANCE:XEMUSDT', group = 'Symbols', inline = 's19') //4
// s20 = input.symbol('BINANCE:XLMUSDT', group = 'Symbols', inline = 's20') //4
// s21 = input.symbol('BINANCE:XMRUSDT', group = 'Symbols', inline = 's21') //4
// s22 = input.symbol('BINANCE:XRPUSDT', group = 'Symbols', inline = 's22') //4
// s23 = input.symbol('BINANCE:XTZUSDT', group = 'Symbols', inline = 's23') //4
// s24 = input.symbol('BINANCE:YFIUSDT', group = 'Symbols', inline = 's24') //4
// s25 = input.symbol('BINANCE:YFIIUSDT', group = 'Symbols', inline = 's25') //4
// s26 = input.symbol('BINANCE:ZECUSDT', group = 'Symbols', inline = 's26') //4
// s27 = input.symbol('BINANCE:ZENUSDT', group = 'Symbols', inline = 's27') //4
// s28 = input.symbol('BINANCE:ZILUSDT', group = 'Symbols', inline = 's28') //4
// s29 = input.symbol('BINANCE:ZRXUSDT', group = 'Symbols', inline = 's29') //4
// s30 = input.symbol('BINANCE:BTCUSDT', group = 'Symbols', inline = 's30') //4
// s31 = input.symbol('BINANCE:BTCUSDT', group = 'Symbols', inline = 's31') //4
// s32 = input.symbol('BINANCE:BTCUSDT', group = 'Symbols', inline = 's32') //4
// s33 = input.symbol('BINANCE:BTCUSDT', group = 'Symbols', inline = 's33') //4
// s34 = input.symbol('BINANCE:BTCUSDT', group = 'Symbols', inline = 's34') //4
// s35 = input.symbol('BINANCE:BTCUSDT', group = 'Symbols', inline = 's35') //4
// s36 = input.symbol('BINANCE:BTCUSDT', group = 'Symbols', inline = 's36') //4
// s37 = input.symbol('BINANCE:BTCUSDT', group = 'Symbols', inline = 's37') //4




//////////////////
// CALCULATIONS //

// Get only symbol
only_symbol(s) => 
    array.get(str.split(s, ":"), 1)

screener_func() =>
    ATR = ta.atr(10)
    ATRpct = math.round(ATR/close*100,1)
    
    max3D    = ta.highest(3)
    max5D    = ta.highest(5)
    max10D    = ta.highest(10)
    max25D   = ta.highest(25)
    max50D   = ta.highest(50)
    max3Dpct = ((max3D-close)/close)*100
    max5Dpct = ((max5D-close)/close)*100
    max10Dpct = ((max10D-close)/close)*100
    max25Dpct = ((max25D-close)/close)*100
    max50Dpct = ((max50D-close)/close)*100
    
    min3D  = ta.lowest(3)
    min5D  = ta.lowest(5)
    min10D  = ta.lowest(10)
    min25D = ta.lowest(25)
    min50D = ta.lowest(50)
    min3Dpct = ((close-min3D)/close)*100
    min5Dpct = ((close-min5D)/close)*100
    min10Dpct = ((close-min10D)/close)*100
    min25Dpct = ((close-min25D)/close)*100
    min50Dpct = ((close-min50D)/close)*100
    
    jumpATR_MaxR3=math.round((max3Dpct/((ATRpct)/2)),1)
    jumpATR_MaxR5=math.round((max5Dpct/((ATRpct)/2)),1)
    jumpATR_MaxR10=math.round((max10Dpct/(ATRpct/2)),1)
    jumpATR_MaxR25=math.round((max25Dpct/(ATRpct/2)),1)
    jumpATR_MaxR50=math.round((max50Dpct/(ATRpct/2)),1)
    
    dropATR_MinR3=math.round((min3Dpct/(ATRpct/2)),1)
    dropATR_MinR5=math.round((min5Dpct/(ATRpct/2)),1)
    dropATR_MinR10=math.round((min10Dpct/(ATRpct/2)),1)
    dropATR_MinR25=math.round((min25Dpct/(ATRpct/2)),1)
    dropATR_MinR50=math.round((min50Dpct/(ATRpct/2)),1)
    
    Distance_3  =  dropATR_MinR3 - jumpATR_MaxR3
    Distance_5  =  dropATR_MinR5 - jumpATR_MaxR5
    Distance_10  =  dropATR_MinR10 - jumpATR_MaxR10
    Distance_25 =  dropATR_MinR25 - jumpATR_MaxR25
    Distance_50 =  dropATR_MinR50 - jumpATR_MaxR50

    
    [Distance_3, Distance_5, Distance_10, Distance_25, Distance_50]


// Security call
[A01, B01, C01, D01, E01] = request.security(s01, timeframe.period, screener_func())
[A02, B02, C02, D02, E02] = request.security(s02, timeframe.period, screener_func())
[A03, B03, C03, D03, E03] = request.security(s03, timeframe.period, screener_func())
[A04, B04, C04, D04, E04] = request.security(s04, timeframe.period, screener_func())
[A05, B05, C05, D05, E05] = request.security(s05, timeframe.period, screener_func())
[A06, B06, C06, D06, E06] = request.security(s06, timeframe.period, screener_func())
[A07, B07, C07, D07, E07] = request.security(s07, timeframe.period, screener_func())
[A08, B08, C08, D08, E08] = request.security(s08, timeframe.period, screener_func())
[A09, B09, C09, D09, E09] = request.security(s09, timeframe.period, screener_func())
[A10, B10, C10, D10, E10] = request.security(s10, timeframe.period, screener_func())
[A11, B11, C11, D11, E11] = request.security(s11, timeframe.period, screener_func())
[A12, B12, C12, D12, E12] = request.security(s12, timeframe.period, screener_func())
[A13, B13, C13, D13, E13] = request.security(s13, timeframe.period, screener_func())
[A14, B14, C14, D14, E14] = request.security(s14, timeframe.period, screener_func())
[A15, B15, C15, D15, E15] = request.security(s15, timeframe.period, screener_func())
[A16, B16, C16, D16, E16] = request.security(s16, timeframe.period, screener_func())
[A17, B17, C17, D17, E17] = request.security(s17, timeframe.period, screener_func())
[A18, B18, C18, D18, E18] = request.security(s18, timeframe.period, screener_func())
[A19, B19, C19, D19, E19] = request.security(s19, timeframe.period, screener_func())
[A20, B20, C20, D20, E20] = request.security(s20, timeframe.period, screener_func())
[A21, B21, C21, D21, E21] = request.security(s21, timeframe.period, screener_func())
[A22, B22, C22, D22, E22] = request.security(s22, timeframe.period, screener_func())
[A23, B23, C23, D23, E23] = request.security(s23, timeframe.period, screener_func())
[A24, B24, C24, D24, E24] = request.security(s24, timeframe.period, screener_func())
[A25, B25, C25, D25, E25] = request.security(s25, timeframe.period, screener_func())
[A26, B26, C26, D26, E26] = request.security(s26, timeframe.period, screener_func())
[A27, B27, C27, D27, E27] = request.security(s27, timeframe.period, screener_func())
[A28, B28, C28, D28, E28] = request.security(s28, timeframe.period, screener_func())
[A29, B29, C29, D29, E29] = request.security(s29, timeframe.period, screener_func())
[A30, B30, C30, D30, E30] = request.security(s30, timeframe.period, screener_func())
[A31, B31, C31, D31, E31] = request.security(s31, timeframe.period, screener_func())
[A32, B32, C32, D32, E32] = request.security(s32, timeframe.period, screener_func())
[A33, B33, C33, D33, E33] = request.security(s33, timeframe.period, screener_func())
[A34, B34, C34, D34, E34] = request.security(s34, timeframe.period, screener_func())
[A35, B35, C35, D35, E35] = request.security(s35, timeframe.period, screener_func())
[A36, B36, C36, D36, E36] = request.security(s36, timeframe.period, screener_func())
[A37, B37, C37, D37, E37] = request.security(s37, timeframe.period, screener_func())
// [A38, B38, C38, D38, E38] = request.security(s38, timeframe.period, screener_func())
// [A39, B39, C39, D39, E39] = request.security(s39, timeframe.period, screener_func())
// [A40, B40, C40, D40, E40] = request.security(s40, timeframe.period, screener_func())

////////////
// ARRAYS //

s_arr   = array.new_string(0)
u_arr   = array.new_bool(0)
A_arr  = array.new_float(0)
B_arr = array.new_float(0)
C_arr = array.new_float(0)
D_arr = array.new_float(0)
E_arr = array.new_float(0)

// Add Symbols 
array.push(s_arr, only_symbol(s01))
array.push(s_arr, only_symbol(s02))
array.push(s_arr, only_symbol(s03))
array.push(s_arr, only_symbol(s04))
array.push(s_arr, only_symbol(s05))
array.push(s_arr, only_symbol(s06))
array.push(s_arr, only_symbol(s07))
array.push(s_arr, only_symbol(s08))
array.push(s_arr, only_symbol(s09))
array.push(s_arr, only_symbol(s10))
array.push(s_arr, only_symbol(s11))
array.push(s_arr, only_symbol(s12))
array.push(s_arr, only_symbol(s13))
array.push(s_arr, only_symbol(s14))
array.push(s_arr, only_symbol(s15))
array.push(s_arr, only_symbol(s16))
array.push(s_arr, only_symbol(s17))
array.push(s_arr, only_symbol(s18))
array.push(s_arr, only_symbol(s19))
array.push(s_arr, only_symbol(s20))
array.push(s_arr, only_symbol(s21))
array.push(s_arr, only_symbol(s22))
array.push(s_arr, only_symbol(s23))
array.push(s_arr, only_symbol(s24))
array.push(s_arr, only_symbol(s25))
array.push(s_arr, only_symbol(s26))
array.push(s_arr, only_symbol(s27))
array.push(s_arr, only_symbol(s28))
array.push(s_arr, only_symbol(s29))
array.push(s_arr, only_symbol(s30))
array.push(s_arr, only_symbol(s31))
array.push(s_arr, only_symbol(s32))
array.push(s_arr, only_symbol(s33))
array.push(s_arr, only_symbol(s34))
array.push(s_arr, only_symbol(s35))
array.push(s_arr, only_symbol(s36))
array.push(s_arr, only_symbol(s37))
// array.push(s_arr, only_symbol(s38))
// array.push(s_arr, only_symbol(s39))
// array.push(s_arr, only_symbol(s40))

///////////
// FLAGS //

array.push(u_arr, u01)
array.push(u_arr, u02)
array.push(u_arr, u03)
array.push(u_arr, u04)
array.push(u_arr, u05)
array.push(u_arr, u06)
array.push(u_arr, u07)
array.push(u_arr, u08)
array.push(u_arr, u09)
array.push(u_arr, u10)
array.push(u_arr, u11)
array.push(u_arr, u12)
array.push(u_arr, u13)
array.push(u_arr, u14)
array.push(u_arr, u15)
array.push(u_arr, u16)
array.push(u_arr, u17)
array.push(u_arr, u18)
array.push(u_arr, u19)
array.push(u_arr, u20)
array.push(u_arr, u21)
array.push(u_arr, u22)
array.push(u_arr, u23)
array.push(u_arr, u24)
array.push(u_arr, u25)
array.push(u_arr, u26)
array.push(u_arr, u27)
array.push(u_arr, u28)
array.push(u_arr, u29)
array.push(u_arr, u30)
array.push(u_arr, u31)
array.push(u_arr, u32)
array.push(u_arr, u33)
array.push(u_arr, u34)
array.push(u_arr, u35)
array.push(u_arr, u36)
array.push(u_arr, u37)
// array.push(u_arr, u38)
// array.push(u_arr, u39)
// array.push(u_arr, u40)

///////////
// CLOSE //

array.push(A_arr, A01)
array.push(A_arr, A02)
array.push(A_arr, A03)
array.push(A_arr, A04)
array.push(A_arr, A05)
array.push(A_arr, A06)
array.push(A_arr, A07)
array.push(A_arr, A08)
array.push(A_arr, A09)
array.push(A_arr, A10)
array.push(A_arr, A11)
array.push(A_arr, A12)
array.push(A_arr, A13)
array.push(A_arr, A14)
array.push(A_arr, A15)
array.push(A_arr, A16)
array.push(A_arr, A17)
array.push(A_arr, A18)
array.push(A_arr, A19)
array.push(A_arr, A20)
array.push(A_arr, A21)
array.push(A_arr, A22)
array.push(A_arr, A23)
array.push(A_arr, A24)
array.push(A_arr, A25)
array.push(A_arr, A26)
array.push(A_arr, A27)
array.push(A_arr, A28)
array.push(A_arr, A29)
array.push(A_arr, A30)
array.push(A_arr, A31)
array.push(A_arr, A32)
array.push(A_arr, A33)
array.push(A_arr, A34)
array.push(A_arr, A35)
array.push(A_arr, A36)
array.push(A_arr, A37)
// array.push(A_arr, A38)
// array.push(A_arr, A39)
// array.push(A_arr, A40)

/////////
// B //

array.push(B_arr, B01)
array.push(B_arr, B02)
array.push(B_arr, B03)
array.push(B_arr, B04)
array.push(B_arr, B05)
array.push(B_arr, B06)
array.push(B_arr, B07)
array.push(B_arr, B08)
array.push(B_arr, B09)
array.push(B_arr, B10)
array.push(B_arr, B11)
array.push(B_arr, B12)
array.push(B_arr, B13)
array.push(B_arr, B14)
array.push(B_arr, B15)
array.push(B_arr, B16)
array.push(B_arr, B17)
array.push(B_arr, B18)
array.push(B_arr, B19)
array.push(B_arr, B20)
array.push(B_arr, B21)
array.push(B_arr, B22)
array.push(B_arr, B23)
array.push(B_arr, B24)
array.push(B_arr, B25)
array.push(B_arr, B26)
array.push(B_arr, B27)
array.push(B_arr, B28)
array.push(B_arr, B29)
array.push(B_arr, B30)
array.push(B_arr, B31)
array.push(B_arr, B32)
array.push(B_arr, B33)
array.push(B_arr, B34)
array.push(B_arr, B35)
array.push(B_arr, B36)
array.push(B_arr, B37)
// array.push(B_arr, B38)
// array.push(B_arr, B39)
// array.push(B_arr, B40)

/////////
// C //

array.push(C_arr, C01)
array.push(C_arr, C02)
array.push(C_arr, C03)
array.push(C_arr, C04)
array.push(C_arr, C05)
array.push(C_arr, C06)
array.push(C_arr, C07)
array.push(C_arr, C08)
array.push(C_arr, C09)
array.push(C_arr, C10)
array.push(C_arr, C11)
array.push(C_arr, C12)
array.push(C_arr, C13)
array.push(C_arr, C14)
array.push(C_arr, C15)
array.push(C_arr, C16)
array.push(C_arr, C17)
array.push(C_arr, C18)
array.push(C_arr, C19)
array.push(C_arr, C20)
array.push(C_arr, C21)
array.push(C_arr, C22)
array.push(C_arr, C23)
array.push(C_arr, C24)
array.push(C_arr, C25)
array.push(C_arr, C26)
array.push(C_arr, C27)
array.push(C_arr, C28)
array.push(C_arr, C29)
array.push(C_arr, C30)
array.push(C_arr, C31)
array.push(C_arr, C32)
array.push(C_arr, C33)
array.push(C_arr, C34)
array.push(C_arr, C35)
array.push(C_arr, C36)
array.push(C_arr, C37)
// array.push(C_arr, C38)
// array.push(C_arr, C39)
// array.push(C_arr, C40)

/////////
// D //

array.push(D_arr, D01)
array.push(D_arr, D02)
array.push(D_arr, D03)
array.push(D_arr, D04)
array.push(D_arr, D05)
array.push(D_arr, D06)
array.push(D_arr, D07)
array.push(D_arr, D08)
array.push(D_arr, D09)
array.push(D_arr, D10)
array.push(D_arr, D11)
array.push(D_arr, D12)
array.push(D_arr, D13)
array.push(D_arr, D14)
array.push(D_arr, D15)
array.push(D_arr, D16)
array.push(D_arr, D17)
array.push(D_arr, D18)
array.push(D_arr, D19)
array.push(D_arr, D20)
array.push(D_arr, D21)
array.push(D_arr, D22)
array.push(D_arr, D23)
array.push(D_arr, D24)
array.push(D_arr, D25)
array.push(D_arr, D26)
array.push(D_arr, D27)
array.push(D_arr, D28)
array.push(D_arr, D29)
array.push(D_arr, D30)
array.push(D_arr, D31)
array.push(D_arr, D32)
array.push(D_arr, D33)
array.push(D_arr, D34)
array.push(D_arr, D35)
array.push(D_arr, D36)
array.push(D_arr, D37)
// array.push(D_arr, D38)
// array.push(D_arr, D39)
// array.push(D_arr, D40)

////////////////
// E //

array.push(E_arr, E01)
array.push(E_arr, E02)
array.push(E_arr, E03)
array.push(E_arr, E04)
array.push(E_arr, E05)
array.push(E_arr, E06)
array.push(E_arr, E07)
array.push(E_arr, E08)
array.push(E_arr, E09)
array.push(E_arr, E10)
array.push(E_arr, E11)
array.push(E_arr, E12)
array.push(E_arr, E13)
array.push(E_arr, E14)
array.push(E_arr, E15)
array.push(E_arr, E16)
array.push(E_arr, E17)
array.push(E_arr, E18)
array.push(E_arr, E19)
array.push(E_arr, E20)
array.push(E_arr, E21)
array.push(E_arr, E22)
array.push(E_arr, E23)
array.push(E_arr, E24)
array.push(E_arr, E25)
array.push(E_arr, E26)
array.push(E_arr, E27)
array.push(E_arr, E28)
array.push(E_arr, E29)
array.push(E_arr, E30)
array.push(E_arr, E31)
array.push(E_arr, E32)
array.push(E_arr, E33)
array.push(E_arr, E34)
array.push(E_arr, E35)
array.push(E_arr, E36)
array.push(E_arr, E37)
// array.push(E_arr, E38)
// array.push(E_arr, E39)
// array.push(E_arr, E40)

///////////
// PLOTS //

A = 2.5
B = 5
C = 8
D = 10
E = 20

var tbl = table.new(position.top_left, 6, 41, frame_color=color.new(#151715,0), frame_width=0, border_width=2, border_color=color.new(color.white, 100))
if barstate.islast
    // table.cell(tbl, 0, 0, 'Symbol',     text_halign = text.align_center, bgcolor = color.new(color.gray,100), text_color = color.white, text_size = size.small)
    // table.cell(tbl, 1, 0, 'ATR',        text_halign = text.align_center, bgcolor = color.new(color.gray,100), text_color = color.white, text_size = size.small)
    // table.cell(tbl, 2, 0, 'Size',       text_halign = text.align_center, bgcolor = color.new(color.gray,100), text_color = color.white, text_size = size.small)
    // table.cell(tbl, 3, 0, 'EMA5',      text_halign = text.align_center, bgcolor = color.new(color.gray,100), text_color = color.white, text_size = size.small)
    // table.cell(tbl, 4, 0, 'EMA25',      text_halign = text.align_center, bgcolor = color.new(color.gray,100), text_color = color.white, text_size = size.small)
    // table.cell(tbl, 5, 0, 'EMA50',     text_halign = text.align_center, bgcolor = color.new(color.gray,100), text_color = color.white, text_size = size.small)

    for i = 0 to 36
        if array.get(u_arr, i)
            
            A_col  = array.get(A_arr, i) > A  ? color.blue  : array.get(A_arr, i) < A*-1 ? color.new(color.red,0) : color.new(color.gray,100) 
            B_col  = array.get(B_arr, i) > B  ? color.blue  : array.get(B_arr, i) < B*-1 ? color.new(color.red,0) : color.new(color.gray,100) 
            C_col  = array.get(C_arr, i) > C  ? color.blue  : array.get(C_arr, i) < C*-1 ? color.new(color.red,0) : color.new(color.gray,100) 
            D_col  = array.get(D_arr, i) > D  ? color.blue  : array.get(D_arr, i) < D*-1 ? color.new(color.red,0) : color.new(color.gray,100) 
            E_col  = array.get(E_arr, i) > E  ? color.blue  : array.get(E_arr, i) < E*-1 ? color.new(color.red,0) : color.new(color.gray,100) 
            
            A_txt = array.get(A_arr, i) > A  ? color.new(color.white,0)  : array.get(A_arr, i) < A*-1 ? color.new(color.white,0) : array.get(A_arr, i) > 0  ? color.aqua  : color.new(#ff0000,0)
            B_txt = array.get(B_arr, i) > B  ? color.new(color.white,0)  : array.get(B_arr, i) < B*-1 ? color.new(color.white,0) : array.get(B_arr, i) > 0  ? color.aqua  : color.new(#ff0000,0)
            C_txt = array.get(C_arr, i) > C  ? color.new(color.white,0)  : array.get(C_arr, i) < C*-1 ? color.new(color.white,0) : array.get(C_arr, i) > 0  ? color.aqua  : color.new(#ff0000,0)
            D_txt = array.get(D_arr, i) > D  ? color.new(color.white,0)  : array.get(D_arr, i) < D*-1 ? color.new(color.white,0) : array.get(D_arr, i) > 0  ? color.aqua  : color.new(#ff0000,0) 
            E_txt = array.get(E_arr, i) > E  ? color.new(color.white,0)  : array.get(E_arr, i) < E*-1 ? color.new(color.white,0) : array.get(E_arr, i) > 0  ? color.aqua  : color.new(#ff0000,0)

            table.cell(tbl, 0, i + 1, array.get(s_arr, i),                               text_halign = text.align_left,   bgcolor = color.new(color.gray,100), text_color = color.white, text_size = size.small)
            table.cell(tbl, 1, i + 1, str.tostring(array.get(A_arr, i)),                 text_halign = text.align_center, bgcolor = A_col,    text_color = A_txt, text_size = size.small)
            table.cell(tbl, 2, i + 1, str.tostring(array.get(B_arr, i), "#.##"),         text_halign = text.align_center, bgcolor = B_col,    text_color = B_txt, text_size = size.small)
            table.cell(tbl, 3, i + 1, str.tostring(array.get(C_arr, i), "#.##"),         text_halign = text.align_center, bgcolor = C_col,    text_color = C_txt, text_size = size.small)
            table.cell(tbl, 4, i + 1, str.tostring(array.get(D_arr, i), "#.##"),         text_halign = text.align_center, bgcolor = D_col   , text_color = D_txt, text_size = size.small)
            table.cell(tbl, 5, i + 1, str.tostring(array.get(E_arr, i), "#.##"),         text_halign = text.align_center, bgcolor = E_col,    text_color = E_txt, text_size = size.small)
            
            



